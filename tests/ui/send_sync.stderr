error[E0277]: `RefCell<hashbrown::map::HashMap<i32, *const str>>` cannot be shared between threads safely
 --> tests/ui/send_sync.rs:9:13
  |
9 |     is_send(&interner); // should fail
  |     ------- ^^^^^^^^^ `RefCell<hashbrown::map::HashMap<i32, *const str>>` cannot be shared between threads safely
  |     |
  |     required by a bound introduced by this call
  |
  = help: within `TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<i32, *const str>>`
  = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
  = note: required for `&TypedInterner<'_, '_, '_, str, i32>` to implement `Send`
note: required by a bound in `is_send`
 --> tests/ui/send_sync.rs:3:15
  |
3 | fn is_send<T: Send>(val: T) {}
  |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
  |
9 |     is_send(*&interner); // should fail
  |             +

error[E0277]: `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
 --> tests/ui/send_sync.rs:9:13
  |
9 |     is_send(&interner); // should fail
  |     ------- ^^^^^^^^^ `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
  |     |
  |     required by a bound introduced by this call
  |
  = help: within `TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>`
  = note: required because it appears within the type `Storage<str>`
  = note: required because it appears within the type `&Storage<str>`
  = note: required because it appears within the type `Interner<'_, '_, str>`
  = note: required because it appears within the type `&Interner<'_, '_, str>`
  = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
  = note: required for `&TypedInterner<'_, '_, '_, str, i32>` to implement `Send`
note: required by a bound in `is_send`
 --> tests/ui/send_sync.rs:3:15
  |
3 | fn is_send<T: Send>(val: T) {}
  |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
  |
9 |     is_send(*&interner); // should fail
  |             +

error[E0277]: `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
 --> tests/ui/send_sync.rs:9:13
  |
9 |     is_send(&interner); // should fail
  |     ------- ^^^^^^^^^ `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
  |     |
  |     required by a bound introduced by this call
  |
  = help: within `TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `Cell<NonNull<bumpalo::ChunkFooter>>`
  = note: required because it appears within the type `bumpalo::Bump`
  = note: required because it appears within the type `Storage<str>`
  = note: required because it appears within the type `&Storage<str>`
  = note: required because it appears within the type `Interner<'_, '_, str>`
  = note: required because it appears within the type `&Interner<'_, '_, str>`
  = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
  = note: required for `&TypedInterner<'_, '_, '_, str, i32>` to implement `Send`
note: required by a bound in `is_send`
 --> tests/ui/send_sync.rs:3:15
  |
3 | fn is_send<T: Send>(val: T) {}
  |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
  |
9 |     is_send(*&interner); // should fail
  |             +

error[E0277]: `Cell<Option<usize>>` cannot be shared between threads safely
 --> tests/ui/send_sync.rs:9:13
  |
9 |     is_send(&interner); // should fail
  |     ------- ^^^^^^^^^ `Cell<Option<usize>>` cannot be shared between threads safely
  |     |
  |     required by a bound introduced by this call
  |
  = help: within `TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `Cell<Option<usize>>`
  = note: required because it appears within the type `bumpalo::Bump`
  = note: required because it appears within the type `Storage<str>`
  = note: required because it appears within the type `&Storage<str>`
  = note: required because it appears within the type `Interner<'_, '_, str>`
  = note: required because it appears within the type `&Interner<'_, '_, str>`
  = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
  = note: required for `&TypedInterner<'_, '_, '_, str, i32>` to implement `Send`
note: required by a bound in `is_send`
 --> tests/ui/send_sync.rs:3:15
  |
3 | fn is_send<T: Send>(val: T) {}
  |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
  |
9 |     is_send(*&interner); // should fail
  |             +

error[E0277]: `*const ()` cannot be shared between threads safely
 --> tests/ui/send_sync.rs:9:13
  |
9 |     is_send(&interner); // should fail
  |     ------- ^^^^^^^^^ `*const ()` cannot be shared between threads safely
  |     |
  |     required by a bound introduced by this call
  |
  = help: within `TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `*const ()`
  = note: required because it appears within the type `PhantomData<*const ()>`
  = note: required because it appears within the type `Storage<str>`
  = note: required because it appears within the type `&Storage<str>`
  = note: required because it appears within the type `Interner<'_, '_, str>`
  = note: required because it appears within the type `&Interner<'_, '_, str>`
  = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
  = note: required for `&TypedInterner<'_, '_, '_, str, i32>` to implement `Send`
note: required by a bound in `is_send`
 --> tests/ui/send_sync.rs:3:15
  |
3 | fn is_send<T: Send>(val: T) {}
  |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
  |
9 |     is_send(*&interner); // should fail
  |             +

error[E0277]: `RefCell<hashbrown::map::HashMap<i32, *const str>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:10:13
   |
10 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `RefCell<hashbrown::map::HashMap<i32, *const str>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<i32, *const str>>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:10:13
   |
10 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:10:13
   |
10 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `Cell<NonNull<bumpalo::ChunkFooter>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `Cell<Option<usize>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:10:13
   |
10 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `Cell<Option<usize>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `Cell<Option<usize>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `*const ()` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:10:13
   |
10 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `*const ()` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `*const ()`
   = note: required because it appears within the type `PhantomData<*const ()>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `RefCell<hashbrown::map::HashMap<i32, *const str>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:12:13
   |
12 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `RefCell<hashbrown::map::HashMap<i32, *const str>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<i32, *const str>>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&mut TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:12:13
   |
12 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&mut TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:12:13
   |
12 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `Cell<NonNull<bumpalo::ChunkFooter>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&mut TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `Cell<Option<usize>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:12:13
   |
12 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `Cell<Option<usize>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `Cell<Option<usize>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&mut TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `*const ()` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:12:13
   |
12 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `*const ()` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut TypedInterner<'_, '_, '_, str, i32>`, the trait `Sync` is not implemented for `*const ()`
   = note: required because it appears within the type `PhantomData<*const ()>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
   = note: required because it appears within the type `TypedInterner<'_, '_, '_, str, i32>`
   = note: required because it appears within the type `&mut TypedInterner<'_, '_, '_, str, i32>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:17:13
   |
17 |     is_send(&interner); // should fail
   |     ------- ^^^^^^^^^ `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `Interner<'_, '_, str>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required for `&Interner<'_, '_, str>` to implement `Send`
note: required by a bound in `is_send`
  --> tests/ui/send_sync.rs:3:15
   |
3  | fn is_send<T: Send>(val: T) {}
   |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
   |
17 |     is_send(*&interner); // should fail
   |             +

error[E0277]: `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:17:13
   |
17 |     is_send(&interner); // should fail
   |     ------- ^^^^^^^^^ `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `Interner<'_, '_, str>`, the trait `Sync` is not implemented for `Cell<NonNull<bumpalo::ChunkFooter>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required for `&Interner<'_, '_, str>` to implement `Send`
note: required by a bound in `is_send`
  --> tests/ui/send_sync.rs:3:15
   |
3  | fn is_send<T: Send>(val: T) {}
   |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
   |
17 |     is_send(*&interner); // should fail
   |             +

error[E0277]: `Cell<Option<usize>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:17:13
   |
17 |     is_send(&interner); // should fail
   |     ------- ^^^^^^^^^ `Cell<Option<usize>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `Interner<'_, '_, str>`, the trait `Sync` is not implemented for `Cell<Option<usize>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required for `&Interner<'_, '_, str>` to implement `Send`
note: required by a bound in `is_send`
  --> tests/ui/send_sync.rs:3:15
   |
3  | fn is_send<T: Send>(val: T) {}
   |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
   |
17 |     is_send(*&interner); // should fail
   |             +

error[E0277]: `*const ()` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:17:13
   |
17 |     is_send(&interner); // should fail
   |     ------- ^^^^^^^^^ `*const ()` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `Interner<'_, '_, str>`, the trait `Sync` is not implemented for `*const ()`
   = note: required because it appears within the type `PhantomData<*const ()>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required for `&Interner<'_, '_, str>` to implement `Send`
note: required by a bound in `is_send`
  --> tests/ui/send_sync.rs:3:15
   |
3  | fn is_send<T: Send>(val: T) {}
   |               ^^^^ required by this bound in `is_send`
help: consider dereferencing here
   |
17 |     is_send(*&interner); // should fail
   |             +

error[E0277]: `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:18:13
   |
18 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&Interner<'_, '_, str>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:18:13
   |
18 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&Interner<'_, '_, str>`, the trait `Sync` is not implemented for `Cell<NonNull<bumpalo::ChunkFooter>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `Cell<Option<usize>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:18:13
   |
18 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `Cell<Option<usize>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&Interner<'_, '_, str>`, the trait `Sync` is not implemented for `Cell<Option<usize>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `*const ()` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:18:13
   |
18 |     is_sync(&interner); // should fail
   |     ------- ^^^^^^^^^ `*const ()` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&Interner<'_, '_, str>`, the trait `Sync` is not implemented for `*const ()`
   = note: required because it appears within the type `PhantomData<*const ()>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&Interner<'_, '_, str>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:20:13
   |
20 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut Interner<'_, '_, str>`, the trait `Sync` is not implemented for `RefCell<hashbrown::map::HashMap<arena_interner::UnsafeBumpRef<str>, ()>>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&mut Interner<'_, '_, str>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:20:13
   |
20 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `Cell<NonNull<bumpalo::ChunkFooter>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut Interner<'_, '_, str>`, the trait `Sync` is not implemented for `Cell<NonNull<bumpalo::ChunkFooter>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&mut Interner<'_, '_, str>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `Cell<Option<usize>>` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:20:13
   |
20 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `Cell<Option<usize>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut Interner<'_, '_, str>`, the trait `Sync` is not implemented for `Cell<Option<usize>>`
   = note: required because it appears within the type `bumpalo::Bump`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&mut Interner<'_, '_, str>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`

error[E0277]: `*const ()` cannot be shared between threads safely
  --> tests/ui/send_sync.rs:20:13
   |
20 |     is_sync(&mut interner); // should fail
   |     ------- ^^^^^^^^^^^^^ `*const ()` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `&mut Interner<'_, '_, str>`, the trait `Sync` is not implemented for `*const ()`
   = note: required because it appears within the type `PhantomData<*const ()>`
   = note: required because it appears within the type `Storage<str>`
   = note: required because it appears within the type `&Storage<str>`
   = note: required because it appears within the type `Interner<'_, '_, str>`
   = note: required because it appears within the type `&mut Interner<'_, '_, str>`
note: required by a bound in `is_sync`
  --> tests/ui/send_sync.rs:4:15
   |
4  | fn is_sync<T: Sync>(val: T) {}
   |               ^^^^ required by this bound in `is_sync`
